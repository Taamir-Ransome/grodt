version: "3.8"

# Production environment overrides
services:
  grodt:
    environment:
      - ENV=prod
      - DATABASE_URL=sqlite:///app/data/grodt.db
      - LOG_LEVEL=WARNING
      - PYTHONPATH=/app
      - PROMETHEUS_HOST=prometheus
      - PROMETHEUS_PORT=9090
      - GRAFANA_HOST=grafana
      - GRAFANA_PORT=3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  prometheus:
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
      - "--storage.tsdb.retention.time=30d" # Full retention for production
      - "--storage.tsdb.retention.size=10GB"
      - "--web.external-url=http://localhost:9091"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_DATABASE_TYPE=sqlite3
      - GF_DATABASE_PATH=/var/lib/grafana/grafana.db
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_LOG_LEVEL=warn
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

volumes:
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/grodt_prometheus_data
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/grodt_grafana_data
  grodt_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/grodt_data
  grodt_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/grodt_logs
  grodt_configs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/grodt_configs

networks:
  grodt-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: grodt-bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
